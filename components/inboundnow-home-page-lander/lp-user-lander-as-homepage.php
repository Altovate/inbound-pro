<?php/*Plugin Name: Landing Pages Extension - Use Landing Page as HomepagePlugin URI: http://www.inboundnow.com/landing-pages/Description: Adds an option to select landing page as default homepage in Settings->ReadingAuthor: Hudson Atwell, David WellsVersion: 1.0.9Author URI: http://www.inboundnow.com*/if(!defined('LP_HOMEPAGE_CURRENT_VERSION')) { define('LP_HOMEPAGE_CURRENT_VERSION', '1.0.9' ); }if(!defined('LP_HOMEPAGE_LABEL')) { define('LP_HOMEPAGE_LABEL' , 'Use Landing Page as Homepage' ); }if(!defined('LP_HOMEPAGE_SLUG')) { define('LP_HOMEPAGE_SLUG' , plugin_basename( dirname(__FILE__) ) );}if(!defined('LP_HOMEPAGE_REMOTE_ITEM_NAME')) { define('LP_HOMEPAGE_REMOTE_ITEM_NAME', 'use-landing-page-as-homepage' );}if(!defined('LP_HOMEPAGE_URLPATH')) { define('LP_HOMEPAGE_URLPATH', WP_PLUGIN_URL.'/'.plugin_basename( dirname(__FILE__) ).'/' );}if(!defined('LP_HOMEPAGE_PATH')) { define('LP_HOMEPAGE_PATH', WP_PLUGIN_DIR.'/'.plugin_basename( dirname(__FILE__) ).'/' );}if (!class_exists('Home_Page_Lander')) {class Home_Page_Lander {	static $homepage_lander;	static function init() {		//add custom post type posts to static page options		add_filter( 'get_pages',  array(__CLASS__, 'lp_select_homepage_filter' ));		//tamper with homepage query to call custom post type post if set		add_action( 'pre_get_posts', array(__CLASS__, 'lp_enable_front_page' ));		//make sure the correct template is called		add_action("template_redirect", array(__CLASS__, 'lp_template_redirect_frontpage'));	}	//add custom post type posts to static page options	static function lp_select_homepage_filter( $pages ) {	if(is_admin()){		 $my_pages = new WP_Query( array( 'post_type' => 'landing-page', 'posts_per_page' => '99' ) );		//print_r($my_pages);		 if ( $my_pages->post_count > 0 ) {			 $pages = array_merge( $pages, $my_pages->posts );		 }	}	return $pages;	}	//tamper with homepage query to call custom post type post if set	public function lp_enable_front_page( $query ){		$current_url = "http://".$_SERVER["HTTP_HOST"].$_SERVER["REQUEST_URI"]."";		$wordpress_url = get_bloginfo('wpurl' );		$current_url = str_replace('/','',$current_url);		$wordpress_url = str_replace('/','',$wordpress_url);		$frontpage_id = get_option('page_on_front');		if (($current_url==$wordpress_url)&& $frontpage_id!=0) {			$query->query_vars['post_type'] = array( 'page','landing-page' );			$query->query_vars['ID'] = $frontpage_id;		}	}	//make sure the correct template is called	static function lp_template_redirect_frontpage() {		global $post;		if (!isset($post)){return;}		$frontpage_id = get_option('page_on_front');		$this_id =  $post->ID;		if ($this_id == $frontpage_id && is_singular('landing-page') && $frontpage_id!=0) {			$template = get_post_meta($post->ID, 'lp-selected-template', true);			$_REQUEST['lp-variation-id'] = lp_template_redirect_rotate($frontpage_id);			if ($post->post_type == "landing-page") {				if (strstr($template,'-slash-')) {					$template = str_replace('-slash-','/',$template);				}				$my_theme =  wp_get_theme($template);				if ($my_theme->exists()) {					return "";				} else if ($template!='default') {					//echo $template; exit;					$template = str_replace('_','-',$template);					if (file_exists(LANDINGPAGES_PATH.'templates/'.$template.'/index.php')) {						include(LANDINGPAGES_PATH.'templates/'.$template.'/index.php');						die();					} else {						include(LANDINGPAGES_UPLOADS_PATH.$template.'/index.php');						die();					}				}			}		}	}	public function lp_template_redirect_rotate($frontpage_id) {	$variations = get_post_meta($frontpage_id,'lp-ab-variations', true);	$marker = get_post_meta($frontpage_id,'lp-ab-variations-marker', true);	if (!is_numeric($marker))		$marker = 0;	$variations = explode(',',$variations);	$variations = array_filter($variations,'is_numeric');	if ($variations) {		foreach ($variations as $key=>$vid) {			if ($vid==0) {				$variation_status = get_post_meta( $frontpage_id , 'lp_ab_variation_status' , true );			} else {				$variation_status = get_post_meta( $frontpage_id , 'lp_ab_variation_status-'.$vid , true );			}			if (!is_numeric($variation_status)||$variation_status==1)				$live_variations[] = $vid;		}		$keys_as_values = array_flip($live_variations);		//set pointer to beginning of array;		reset($keys_as_values);		if (!isset($live_variations[$marker])) {			$marker= reset($keys_as_values);		}		$i = 0;		if (key($keys_as_values)!=$marker) {			while ((next($keys_as_values) != $marker )) {				if ($i>100)					break;				$i++;			}		}		$variation_id = $live_variations[$marker];		$marker = next($keys_as_values);		if (!$marker) {			$marker = reset($keys_as_values);		}		update_post_meta($frontpage_id, 'lp-ab-variations-marker', $marker);	} else {		$variation_id = 0;	}		return $variation_id;	}}Home_Page_Lander::init();}if (is_admin()) {	/*PREPARE THIS EXTENSION FOR LICESNING*/	if ( class_exists( 'LP_EXTENSION_LICENSE' ) )		$license = new LP_EXTENSION_LICENSE(  LP_HOMEPAGE_LABEL , LP_HOMEPAGE_REMOTE_ITEM_NAME ) ;	/*PREPARE THIS EXTENSION FOR AUTOMATIC UPDATES*/	if ( class_exists( 'LP_EXTENSION_UPDATER' ) ) {		$edd_updater = new LP_EXTENSION_UPDATER( LANDINGPAGES_STORE_URL, __FILE__, array(			'version'   => LP_HOMEPAGE_CURRENT_VERSION, /* current version number of extension */			'license'   => trim(get_option( 'lp-license-keys-'.LP_HOMEPAGE_REMOTE_ITEM_NAME )), /* to retrieve license keys we use the following as the option id: 'lp-license-key-' + 'id' as defined above in lp_add_option() above. You can leave this alone.*/			'item_name' => LP_HOMEPAGE_REMOTE_ITEM_NAME, /* permalink name of this extension on inboundnow.com/landing-pages/ store. Leave this line alone */			'nature'    => 'extension'  /* nature of update request. leave this line alone */		));	}}?>